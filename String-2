def double_char(str):
  #Given a string, return a string where for every char in the original,
  #there are two chars.
  list=[]
  for char in str:
    list.append(char)
    list.append(char)

  return ''.join(list)
  #return ''.join(char * 2 for char in str)

def count_hi(str):
 # Return the number of times that the string "hi" appears anywhere in the given
 #  string.
  count=0
  for i in range(len(str)-1):
    if str[i:i+2]=='hi':
      count+=1
    else:
      continue
  return count


def cat_dog(str):
    # Return True if the string "cat" and "dog" appear the same number of times in
    # the given string.
    cat_count = 0
    dog_count = 0

    for i in range(len(str) - 2):
        if str[i:i + 3] == 'cat':
            cat_count += 1
        if str[i:i + 3] == 'dog':
            dog_count += 1
    return cat_count == dog_count

def count_code(str):
  #Return the number of times that the string "code" appears anywhere in the given
  #string, except we'll accept any letter for the 'd', so "cope" and "cooe" count.
  count=0
  for i in range(len(str)-3):
    if str[i:i+2]=='co' and str[i+3]=='e':
      count+=1
  return count


def end_other(a, b):
    # Given two strings, return True if either of the strings appears at the very
    # end of the other string, ignoring upper/lower case differences
    a.lower()
    b.lower()

    return (b.endswith(a) or a.endswith(b))

def xyz_there(str):
  #Return True if the given string contains an appearance of "xyz" where the xyz
  #is not directly preceeded by a period (.). So "xxyz" counts but "x.xyz" does
  #not.
  for i in range(len(str)):
    if str[i:i+3]=='xyz' and str[i-1]!='.':
      return True
  return False

